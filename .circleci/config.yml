version: 2
jobs:
  sslcheck:
    machine:
      image: circleci/classic:latest
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Connect To Apthletic VPN
          command: |
            echo "Installing OpenVPN 2.4"
            echo "deb http://build.openvpn.net/debian/openvpn/release/2.4 trusty main" > /tmp/openvpn-aptrepo.list
            sudo mv /tmp/openvpn-aptrepo.list /etc/apt/sources.list.d/openvpn-aptrepo.list
            sudo apt-get update
            sudo apt-get install openvpn 
            echo "${VPN_CONF_BASE64}" | base64 -d > /tmp/openvpn.conf
            sudo mv /tmp/openvpn.conf /etc/openvpn/vpn.conf
            sudo openvpn --daemon --config /etc/openvpn/vpn.conf
            echo "OpenVPN Daemon starting"
      - run:
          name: Check SSL Certificates
          command: |
            .circleci/slack-message.sh "*Checking SSL Certificates*" "#FFF000"
            docker build . -t apthletic/ssl-checker:1
            OUTPUT=$(docker run apthletic/ssl-checker:1 -f ./hosts_to_check)
            echo "$OUTPUT"
            if ! echo "$OUTPUT" | grep "Expired: 0" ; then
              .circleci/slack-message.sh "*Checked SSL Certificates*: Expired :x:" "#FF0000"
            fi
            if ! echo "$OUTPUT" | grep "Failed: 0" ; then
              .circleci/slack-message.sh "*Checked SSL Certificates*: Failed :x:" "#FF0000"
            fi
            if ! echo "$OUTPUT" | grep "Warning: 0" ; then
              .circleci/slack-message.sh "*Checked SSL Certificates*: Warnings :warning:" "#FF0000"
            fi
      - run:
          name: Stop VPN
          command: sudo killall openvpn

workflows:
  version: 2
  sslcheck-on-push:
    jobs:
      - sslcheck:
          context: github-backup
          filters:
            branches:
              only: master
  sslcheck-on-schedule:
    triggers:
      - schedule:
          cron: "0 22 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - sslcheck:
          context: github-backup
          filters:
            branches:
              only: master
